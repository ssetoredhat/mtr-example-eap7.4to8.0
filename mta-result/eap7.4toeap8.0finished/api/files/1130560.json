{"id":"1130560","content":"package com.redhat.coolstore.service;\r\n\r\nimport com.redhat.coolstore.model.Order;\r\nimport com.redhat.coolstore.model.OrderItem;\r\nimport com.redhat.coolstore.utils.Transformers;\r\nimport jakarta.ejb.ActivationConfigProperty;\r\nimport jakarta.ejb.MessageDriven;\r\nimport jakarta.inject.Inject;\r\nimport jakarta.jms.JMSException;\r\nimport jakarta.jms.Message;\r\nimport jakarta.jms.MessageListener;\r\nimport jakarta.jms.TextMessage;\r\nimport java.util.logging.Logger;\r\n\r\n@MessageDriven(\r\n   name = \"InventoryNotificationMDB\",\r\n   activationConfig = {@ActivationConfigProperty(\r\n   propertyName = \"destinationLookup\",\r\n   propertyValue = \"topic/orders\"\r\n), @ActivationConfigProperty(\r\n   propertyName = \"destinationType\",\r\n   propertyValue = \"jakarta.jms.Topic\"\r\n), @ActivationConfigProperty(\r\n   propertyName = \"transactionTimeout\",\r\n   propertyValue = \"30\"\r\n), @ActivationConfigProperty(\r\n   propertyName = \"acknowledgeMode\",\r\n   propertyValue = \"Auto-acknowledge\"\r\n)}\r\n)\r\npublic class InventoryNotificationMDB implements MessageListener {\r\n   private static final int LOW_THRESHOLD = 50;\r\n   @Inject\r\n   private CatalogService catalogService;\r\n   @Inject\r\n   private Logger log;\r\n\r\n   public void onMessage(Message rcvMessage) {\r\n      try {\r\n         if (rcvMessage instanceof TextMessage) {\r\n            TextMessage msg = (TextMessage)rcvMessage;\r\n            String orderStr = (String)msg.getBody(String.class);\r\n            Order order = Transformers.jsonToOrder(orderStr);\r\n            order.getItemList().forEach(this);\r\n         }\r\n      } catch (JMSException var5) {\r\n         System.err.println(var5.getMessage());\r\n      }\r\n\r\n   }\r\n\r\n   // $FF: synthetic method\r\n   private void lambda$onMessage$0(OrderItem orderItem) {\r\n      int old_quantity = this.catalogService.getCatalogItemById(orderItem.getProductId()).getInventory().getQuantity();\r\n      int new_quantity = old_quantity - orderItem.getQuantity();\r\n      if (new_quantity < 50) {\r\n         this.log.warning(orderItem.getProductId());\r\n      }\r\n\r\n   }\r\n}\r\n"}