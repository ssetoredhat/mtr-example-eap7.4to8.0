{"id":"1265832","content":"package com.redhat.coolstore.service;\r\n\r\nimport com.redhat.coolstore.model.CatalogItemEntity;\r\nimport com.redhat.coolstore.model.InventoryEntity;\r\nimport jakarta.ejb.Stateless;\r\nimport jakarta.inject.Inject;\r\nimport jakarta.persistence.EntityManager;\r\nimport jakarta.persistence.PersistenceContext;\r\nimport jakarta.persistence.criteria.CriteriaBuilder;\r\nimport jakarta.persistence.criteria.CriteriaQuery;\r\nimport jakarta.persistence.criteria.Root;\r\nimport java.util.List;\r\nimport java.util.logging.Logger;\r\n\r\n@Stateless\r\npublic class CatalogService {\r\n   @Inject\r\n   Logger log;\r\n   @PersistenceContext\r\n   private EntityManager em;\r\n\r\n   public List<CatalogItemEntity> getCatalogItems() {\r\n      CriteriaBuilder cb = this.em.getCriteriaBuilder();\r\n      CriteriaQuery<CatalogItemEntity> criteria = cb.createQuery(CatalogItemEntity.class);\r\n      Root<CatalogItemEntity> member = criteria.from(CatalogItemEntity.class);\r\n      criteria.select(member);\r\n      return this.em.createQuery(criteria).getResultList();\r\n   }\r\n\r\n   public CatalogItemEntity getCatalogItemById(String itemId) {\r\n      return (CatalogItemEntity)this.em.find(CatalogItemEntity.class, itemId);\r\n   }\r\n\r\n   public void updateInventoryItems(String itemId, int deducts) {\r\n      InventoryEntity inventoryEntity = this.getCatalogItemById(itemId).getInventory();\r\n      int currentQuantity = inventoryEntity.getQuantity();\r\n      inventoryEntity.setQuantity(currentQuantity - deducts);\r\n      this.em.merge(inventoryEntity);\r\n   }\r\n}\r\n"}