Number Of Executions, Total Milliseconds,  Milliseconds per execution, Type
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.DataSourceModel).gremlin().has(isXA,EQUALS,false).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*hibernate.*\.jar$).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Scheduled).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Derby Driver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Istio).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Akka Testkit).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,iLog).as(default)"
     1,      0,     0.00, Query.as(67aaef30-8502-4e40-8981-3e42624ad7a5)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RabbitMQ Client).as(default)"
     2,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.DataSourceModel).gremlin().has(isXA,EQUALS,true).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PrimeFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Clustering Web Session).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,DbUnit).as(default)"
   155,    100,     0.65, "TypeReferenceService.createTypeReference(fileModel,location,lineNumber,columnNumber,length,source)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.WindupJavaConfigurationModel).gremlin().has(classNotFoundAnalysisEnabled,EQUALS,true).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cactus).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SubCut).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,TieFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SNMP4J).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSON-B).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Shiro).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Test Interface).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Zbus Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Geronimo).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Unitils).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Orion Web XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,H2 Driver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,tinylog).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Resource Adapter).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate OGM).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logback).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Trunk JGuard).as(default)"
     1,      4,     4.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JaxRSWebServiceModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Handlebars).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.graph.model.DuplicateArchiveModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Kodein).as(default)"
     1,    218,   218.00, FernflowerDecompilationOperation.perform
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.xml.model.DoctypeMetaModel).gremlin()org.jboss.windup.rules.apps.javaee.rules.DiscoverHibernateConfigurationRuleProvider$1@b9baa32.as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mixer).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Kibana).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbSessionBeanModel).gremlin().has(sessionType,EQUALS,Stateful).as(default)"
     1,      0,     0.00, Query.as(dce4f1e7-1434-4abb-bc59-3befe32ec29a)
    25,     88,     3.52, ClassFilePreDecompilationScan.perform()
     2,      1,     0.50, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JspSourceFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss Web XML).as(default)"
    88,      0,     0.00, GraphService.findAllByProperty(qualifiedName)
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JsfSourceFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EJB XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*jdbc.*\.jar$).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,LevelDB Client).as(default)"
  3002,     18,     0.01, GraphService.findAllByProperty(filePath)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jukito).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(b270cea0-0b27-4a10-935e-712773a2050c)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Google Guice).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,UberFire).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Nuxeo JTA/JCA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSTL).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPLEMENTS_TYPE]).as(999ff404-db6b-46f4-9b56-a29cbec09289)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*teiid.*\.jar$).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Servlet).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JMockit).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Karaf).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OCPsoft Logging Utils).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JFreeChart).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(0ef4bcd1-4882-4c3d-9887-920cc92743b5)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Web).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RichFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring JMX).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Data).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OWASP CSRF Guard).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.java.model.project.MavenProjectModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JCunit).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.graph.model.ArchiveModel).gremlin()org.jboss.windup.config.query.Query$1@6f81f7f7.as(default)
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbSessionBeanModel).as(default)
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.java.model.JavaSourceFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spock).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbSessionBeanModel).gremlin().has(sessionType,EQUALS,Stateless).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oracle DB Driver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere WS Extension).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Application Properties File).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Vlad).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Axis).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Pega).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SAML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Easy Rules).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MinLog).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Commons Validator).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logging Utils).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,jboss-seam.*\.jar$).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ka DI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WF Core JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin().has(csv,EQUALS,true).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AMQP Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EtlUnit).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,CDI XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Axion Driver).as(default)"
     1,      0,     0.00, Query.as(e38dc62a-d566-4c8c-8877-0abe669a5105)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ignite JTA).as(default)"
     1,     10,    10.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Infinispan).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsDestinationModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EAR).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mockito).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Camunda).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Injekt for Kotlin).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache HBase Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,3scale).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,NLOG4J).as(default)"
     1,     24,    24.00, "TypeReferenceService.getPackageUseFrequencies(projectModel,nameDepth,recursive)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-ejb-jar-ext.xmi).has(rootTagName,EQUALS,EJBJarExtension).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Neo4j).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin()org.jboss.windup.rules.apps.java.scan.provider.DiscoverFilesAndTypesRuleProvider$$Lambda$2308/0x0000000801fff040@19941131.as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Monolog).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.java.archives.model.IdentifiedArchiveModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MongoDB Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenSAML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Ignite).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logstash).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JAXR).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*jsf-[(api)|(impl)].*\.jar$).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,BabbageFaces).as(default)"
     1,      1,     1.00, Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jetty).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,CDI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JMock).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java Transaction API).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Talend ESB).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Specsy).as(default)"
     1,      3,     3.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.NamespaceMetaModel).gremlin().has(namespaceURI,EQUALS,http://java.sun.com/xml/ns/persistence).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Twitter Util Logging).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Axis2).as(default)"
     1,      1,     1.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.CssFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Cloud Function).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jakarta EE XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Sirona JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,pom.xml).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,LiferayFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Synapse).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss EJB XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cloudera).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.java.model.WindupJavaConfigurationModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JAXB).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.RemoteServiceModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WSS4J).as(default)"
     1,      0,     0.00, GraphService.findAllByProperty(JNDI_LOCATION)
     2,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Liferay).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Properties).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,datasources).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ICEfaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Geronimo JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Scaldi).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Quartz).as(default)"
     1,     29,    29.00, Query.fromType(org.jboss.windup.graph.model.resource.FileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HavaRunner).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,KumuluzEE JTA).as(default)"
   641,      3,     0.00, TypeInterestFactory.matchesAny(text).manualSearch
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-ejb-jar-bnd.xmi).has(rootTagName,EQUALS,EJBJarBinding).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Cloud Config).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,XACML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EasyMock).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jersey).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Needle).as(default)"
  1162,      4,     0.00, TypeInterestFactory.matchesAny(text)
   372,      6,     0.02, GraphService.findAllByProperty(name)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,orion-ejb-jar).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Eureka).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Blitz4j).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MEJB).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.java.ip.HardcodedIPLocationModel).as(default)
     1,      6,     6.00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbSessionBeanModel).gremlin().has(sessionType,EQUALS,Singleton).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ehcache).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Camel Messaging Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring DI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Blaze).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Tornado Inject).as(default)"
     1,      4,     4.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JPAPersistenceUnitModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Dynacache).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SwarmCache).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Feign).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Narayana Arjuna).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE Batch API).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MultithreadedTC).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Commons Logging).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Evo JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OWASP ESAPI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Tomcat).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Winter).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MySQL Driver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Memcached client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenPojo).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JMustache).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsDestinationModel).gremlin().has(destinationType,EQUALS,QUEUE).as(default)"
     1,      1,     1.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,ejb-jar).has(fileName,EQUALS,jboss-ejb3.xml).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Play Test).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JCache).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ShiftOne).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Trimou).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Wicket).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Twirl).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Concordion).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Coherence).as(default)"
     6,      1,     0.17, Query.fromType(org.jboss.windup.graph.model.ArchiveModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBossMQ Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,BeanInject).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,KouInject).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Log4J).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logging to Socket Handler).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oracle ADF).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Petals EIP).as(default)"
     6,      8,     1.33, Classification.performParameterized
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.HibernateEntityModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBPM).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,TestNG).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JACC).as(default)"
     1,     58,    58.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,TensorFlow).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WSDL).as(default)"
  1492,     51,     0.03, GraphService.findAllByProperty(stats.name)
     1,      1,     1.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,weblogic-web-app).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Lumberjack).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OW2 Log Util).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Log4s).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Micro DI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,web-app).has(fileName,NOT_EQUALS,geronimo-web.xml).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SSL).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSF).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Vaadin).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Integration).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Snippetory Template Engine).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*myfaces-[(api)|(impl)|(bundle)].*\.jar$).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MapR).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JayWire).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Demoiselle JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Bouncy Castle).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Common Annotations).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hamcrest).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JFunk).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.xml.model.DoctypeMetaModel).gremlin()org.jboss.windup.rules.apps.javaee.rules.DiscoverHibernateMappingRuleProvider$1@3a5fcdb5.as(default)
     1,      6,     6.00, DiscoverPropertiesFilesRuleProvider.perform
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE Batch).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RandomizedTesting Runner).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Weka).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Polyforms DI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss Transactions).as(default)"
     2,    249,   124.50, org.jboss.windup.graph.GraphContextFactory.create(Path)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Iroh).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apiman).as(default)"
     1,      0,     0.00, Query.as(48925b55-9a64-4b72-a0e3-5e6e28f04b01)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Actuator).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Cache).as(default)"
     5,      0,     0.00, GraphService.findAllByProperty(mavenIdentifier)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cucumber).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,XFire).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Swagger).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate Cfg).as(default)"
     2,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spark).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.HibernateConfigurationFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SwitchYard).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ANTLR StringTemplate).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.reporting.model.ApplicationReportModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss Cache).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Play).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Airframe).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HighFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MyFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HornetQ Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSilver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GFC Logging).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Water Template Engine).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WS Metadata).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Acegi Security).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OmniFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Transactions).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Portlet).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Grapht DI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Messaging Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Santuario).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SQLite Driver).as(default)"
    74,     46,     0.62, TechnologyTag.performParameterized
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Elasticsearch).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mule).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbDeploymentDescriptorModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Mahout).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MckoiSQLDB Driver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OAUTH).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jamon).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring MVC).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Peaberry).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Test).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,KLogger).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OPS4J Pax Logging Service).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Webmacro).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mycontainer JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Plexus Container).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Kotlin Logging).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Teiid).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Qpid Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate Mapping).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ikasan).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GlassFish JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EclipseLink).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JPANamedQueryModel).as(default)
  2901,     43,     0.01, "FileService.createByFilePath(parentFile, filePath)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ButterFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JPA Matchers).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cfg Engine).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Rythm Template Engine).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Javax Inject).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Composite Logging JCL).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Sticky Configured).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.RMIServiceModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Zipkin).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Commons JCS).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,process-definition).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Orion EJB XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Drools).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Avalon Logkit).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-webservices-bnd.xmi).has(rootTagName,EQUALS,WSBinding).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,ejb-jar).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Microsoft SQL Driver).as(default)"
     1,      0,     0.00, Query.gremlin()org.jboss.windup.rules.apps.java.condition.JavaClass$2@745fe303.as(iqi.d80f846d-635e-438d-820b-4601dcc3c913)
     6,      0,     0.00, GraphService.findAllByProperty(ClassificationModel-classification)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,orion-web-app).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JNDIResourceModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Stripes).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Thymeleaf).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OTR4J).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Morphia).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Tapestry).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Clustering EJB).as(default)"
   549,     28,     0.05, GraphService.findAllByPropertyMatchingRegex(filePath)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HTTP Client).as(default)"
     1,      2,     2.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-web-bnd.xmi).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin().has(exportSummary,EQUALS,true).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Flume).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Redis).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,BootsFaces).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Camel).as(default)"
     1,      0,     0.00, GraphService.findAllByProperty(sha1Hash)
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.yaml.model.YamlFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Hadoop).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,jboss).has(fileName,EQUALS,jboss.xml).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PostgreSQL Driver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AKKA JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,SLF4J).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hazelcast).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GIN).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Scalate).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Connector XML).as(default)"
     1,     10,    10.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JsFileModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,GWT).as(default)"
     1,      3,     3.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.HtmlFileModel).as(default)
     2,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.SpringBeanModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere EJB).as(default)"
     5,      6,     1.20, Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).as(default)
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(84334d97-165b-48ad-b10a-5493daa06f03)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*camel.*\.jar$).as(default)"
    23,      0,     0.00, getUniqueByName(qualifiedName)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jasypt).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oscache).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(272ebe38-2949-4a84-9dc0-4d94dcac4003)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jakarta EE Client XML).as(default)"
     1,      0,     0.00, FilePathComparator
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,EJB Timer).as(default)"
     2,      5,     2.50, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbMessageDrivenModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Mule Functional Test Framework).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JavaClassFileModel).gremlin().has(parseError,NOT_DEFINED,null).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Struts).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PicketLink).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Macros).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WSO2).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Syringe).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JUnit).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,MRules).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,FreeMarker).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JDBC).as(default)"
   137,    172,     1.26, JavaClass.evaluate
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hibernate).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Log.io).as(default)"
     1,      1,     1.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,weblogic-ejb-jar).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Properties).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.java.model.JarArchiveModel).gremlin().has(fileName,REGEX,.*drools.*\.jar$).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JaxWSWebServiceModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Silk DI).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AngularFaces).as(default)"
     2,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsConnectionFactoryModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jetbrick Template).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Amazon SQS Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ServiceMix).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE Client XML).as(default)"
    52,    414,     7.96, XmlFile.evaluate
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Accumulo Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OW2 JTA).as(default)"
    83,      1,     0.01, GraphService.addTypeToModel
     1,    218,   218.00, AnalyzeJavaFilesRuleProvider.analyzeFile
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HSQLDB Driver).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,DVSL).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBoss logging).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT]).as(68a50296-90f6-4703-9969-43998eb23de0)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Atomikos JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,RocketMQ Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cassandra Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.NamespaceMetaModel).gremlin().has(namespaceURI,EQUALS,http://xmlns.jcp.org/xml/ns/persistence).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,beans).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Scribe).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.graph.model.WindupConfigurationModel).gremlin().has(skipSourceCodeReports,EQUALS,true).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Everit JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AcrIS Security).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(fba1148a-970d-47a9-aec5-d0a4038fdfa6)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache CXF).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.ThreadPoolModel).as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OACC).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Logging to file system).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Keyczar).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Grails).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,REST Assured).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(69a9cf90-488a-46b2-a07a-9ff50d4890b1)"
     1,     45,    45.00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,false).has(filePath,REGEX,.*\.properties$).as(default)"
     1,      4,     4.00, Query.as(e3896059-8346-473e-99c0-26d12e719365)
     1,      0,     0.00, Query.fromType(org.jboss.windup.reporting.model.TechnologyUsageStatisticsModel).as(default)
     1,      1,     1.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(rootTagName,EQUALS,jboss-web).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JPA XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,XMLUnit).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Arquillian).as(default)"
    63,      0,     0.00, JavaClassService.resolveByQualifiedName(qualifiedClassName)
     1,      1,     1.00, GraphService.findAllWithoutProperty(skipDecompilation)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Lift JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Hdiv).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,OpenWS).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Dagger).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebLogic Web XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere EJB Ext).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Weld).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PicketBox).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Unirest).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Chunk Templates).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java EE JSON-P).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Restito).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.XmlFileModel).gremlin().has(fileName,EQUALS,ibm-webservices-ext.xmi).has(rootTagName,EQUALS,WsExtension).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PowerMock).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Cache API).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Shell).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JBehave).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.javaee.model.JmsDestinationModel).gremlin().has(destinationType,EQUALS,TOPIC).as(default)"
     1,      0,     0.00, Query.as(e647d64f-570f-4c7a-bfcc-34938815c4f5)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Meecrowave JTA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Jcabi Log).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Airlift Log Manager).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere Web XML).as(default)"
     1,      4,     4.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.JPAEntityModel).as(default)
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(c511623d-646b-48ee-97fd-5f42ed5ee04c)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Bean Validation).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSF XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Apache Aries).as(default)"
  1061,      0,     0.00, TypeInterestFactory.matchesAny(text).cacheCheck
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Data JPA).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,PicoContainer).as(default)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.Jbpm3ProcessModel).as(default)
     1,    195,   195.00, AnalyzeJavaFilesRuleProvider.parseFiles
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,0MQ Client).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,HttpUnit).as(default)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[IMPORT]).as(a7592ee4-500d-49d3-a9e2-5d7492dd386d)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Security).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Micrometer).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.graph.model.resource.FileModel).gremlin().has(isDirectory,EQUALS,false).has(filePath,REGEX,.+\.\b(|zip|rar|sar|ear|war|jar)\b$).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AspectJ).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.rules.apps.xml.model.NamespaceMetaModel).gremlin().has(namespaceURI,EQUALS,https://jakarta.ee/xml/ns/persistence).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Velocity).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebSphere WS Binding).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,AOP Alliance).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Ickenham).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Guava Testing).as(default)"
     1,      0,     0.00, Query.as(c236c7aa-c48e-402a-b952-3154ecd55f5c)
     1,      0,     0.00, Query.fromType(org.jboss.windup.graph.model.ArchiveModel).gremlin()org.jboss.windup.config.query.Query$1@651dec0e.as(default)
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Anakia).as(default)"
     2,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.WebXmlModel).as(default)
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(0fc9f955-e1ac-4dd5-8c8b-cc5ef13a0833)"
     1,      0,     0.00, "Query.gremlin().has(referenceType,CONTAINS_ANY_TOKEN,[ANNOTATION]).as(7262f803-5883-46eb-a166-599d9ab237bc)"
     1,      0,     0.00, Query.fromType(org.jboss.windup.rules.apps.javaee.model.EjbEntityBeanModel).as(default)
     3,     24,     8.00, "TypeReferenceService.getPackageUseFrequencies(data,projectModel,nameDepth,recursive)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Oracle Forms).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Batch).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JPA Mapping XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Spring Boot Flo).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,JSecurity).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,WebServices XML).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Java Threads).as(default)"
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,ActiveMQ).as(default)"
  3954,      0,     0.00, GraphService.create
     1,      0,     0.00, "Query.fromType(org.jboss.windup.reporting.model.TechnologyTagModel).gremlin().has(name,EQUALS,Seam).as(default)"
