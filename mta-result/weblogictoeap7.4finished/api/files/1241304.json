{"id":"1241304","content":"package com.redhat.coolstore.service;\r\n\r\nimport com.redhat.coolstore.model.Order;\r\nimport com.redhat.coolstore.utils.Transformers;\r\nimport java.util.function.Consumer;\r\nimport java.util.logging.Logger;\r\nimport javax.ejb.ActivationConfigProperty;\r\nimport javax.ejb.MessageDriven;\r\nimport javax.inject.Inject;\r\nimport javax.jms.JMSException;\r\nimport javax.jms.Message;\r\nimport javax.jms.MessageListener;\r\nimport javax.jms.TextMessage;\r\n\r\n@MessageDriven(\r\n   name = \"InventoryNotificationMDB\",\r\n   activationConfig = {@ActivationConfigProperty(\r\n   propertyName = \"destinationLookup\",\r\n   propertyValue = \"topic/orders\"\r\n), @ActivationConfigProperty(\r\n   propertyName = \"destinationType\",\r\n   propertyValue = \"javax.jms.Topic\"\r\n), @ActivationConfigProperty(\r\n   propertyName = \"transactionTimeout\",\r\n   propertyValue = \"30\"\r\n), @ActivationConfigProperty(\r\n   propertyName = \"acknowledgeMode\",\r\n   propertyValue = \"Auto-acknowledge\"\r\n)}\r\n)\r\npublic class InventoryNotificationMDB implements MessageListener {\r\n   private static final int LOW_THRESHOLD = 50;\r\n   @Inject\r\n   private CatalogService catalogService;\r\n   @Inject\r\n   private Logger log;\r\n\r\n   public void onMessage(Message rcvMessage) {\r\n      try {\r\n         if (rcvMessage instanceof TextMessage) {\r\n            TextMessage msg = (TextMessage)rcvMessage;\r\n            String orderStr = (String)msg.getBody(String.class);\r\n            Order order = Transformers.jsonToOrder(orderStr);\r\n            order.getItemList().forEach((orderItem) -> {\r\n               int old_quantity = this.catalogService.getCatalogItemById(orderItem.getProductId()).getInventory().getQuantity();\r\n               int new_quantity = old_quantity - orderItem.getQuantity();\r\n               if (new_quantity < 50) {\r\n                  this.log.warning(\"Inventory for item \" + orderItem.getProductId() + \" is below threshold (\" + 50 + \"), contact supplier!\");\r\n               }\r\n\r\n            });\r\n         }\r\n      } catch (JMSException var5) {\r\n         System.err.println(\"An exception occurred: \" + var5.getMessage());\r\n      }\r\n\r\n   }\r\n}\r\n"}